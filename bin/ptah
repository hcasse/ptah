#!/usr/bin/python3

import argparse
import re
import subprocess
import yaml

from ptah import io
from ptah import format
from ptah import util
from ptah import latex
from ptah import props
from ptah import *
import ptah.pages


# formats
# https://en.wikipedia.org/wiki/ISO_216
FORMATS = {
	"a3": (297, 420),
	"a4": (210, 297),
	"a5": (148, 210),
	"folio": (305, 483),
	"quarto": (214, 305),
	"imperial-octavo": (210, 292),
	"super-octavo": (178, 279),
	"royal-octavo": (159, 254),
	"medium-octavo": (165, 235),
	"octavo": (153, 229),
	"crown-octavo": (137, 203),
	"duodecimo": (127, 187),
	"sextodecimo": (102, 171),
	"octodecimo": (102, 165)
}


# entry point
def main(mon = io.DEF):

	# parse arguments
	parser = argparse.ArgumentParser(
		prog = "ptah",
		description = "Photo album generator"
	)
	parser.add_argument('albums', nargs="*", help="Album to generate.")
	parser.add_argument("--doc", action="store_true",
		help="Generate the documentation.")
	parser.add_argument("--debug", action="store_true",
		help="Generate the documentation.")
	
	args = parser.parse_args()
	albums = args.albums
	if albums == None:
		albums = "album.ptah"

	# generic options
	if args.debug:
		util.DEBUG = True

	# generate the documentation
	if args.doc:
		latex.gen_doc()
		
	# process the albums
	else:
		for path in args.albums:
			try:
				album = Album(path)
				album.read(mon)
				latex.Drawer(album).gen()
			except util.CheckError as e:
				mon.print_error(str(e))

main()
